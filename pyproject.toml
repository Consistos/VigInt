[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vigint"
version = "1.0.0"
description = "Vigint API Services - RTSP streaming and billing system"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Vigint Technologies", email = "dev@vigint.com"}
]
maintainers = [
    {name = "Vigint Technologies", email = "dev@vigint.com"}
]
keywords = ["api", "rtsp", "streaming", "billing", "video"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Multimedia :: Video",
    "Topic :: Office/Business :: Financial",
]
requires-python = ">=3.8.1"
dependencies = [
    "Flask>=2.3.0",
    "Flask-SQLAlchemy>=3.0.0",
    "SQLAlchemy>=2.0.0",
    "requests>=2.31.0",
    "PyJWT>=2.8.0",
    "configparser>=6.0.0",
    "python-dateutil>=2.8.0",
    "python-dotenv>=1.0.0",
    "psycopg2-binary>=2.9.0",
    "PyMySQL>=1.1.0",
    "stripe>=6.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-flask>=1.2.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
]
monitoring = [
    "sentry-sdk[flask]>=1.32.0",
    "prometheus-client>=0.17.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
]

[project.urls]
Homepage = "https://vigint.com"
Documentation = "https://docs.vigint.com"
Repository = "https://github.com/vigint/vigint-api"
"Bug Tracker" = "https://github.com/vigint/vigint-api/issues"

[project.scripts]
vigint = "start_vigint:main"
vigint-billing = "generate_weekly_invoices:main"
vigint-monitor = "cost_monitor:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["vigint*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
vigint = ["*.yml", "*.yaml", "*.ini.example"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | venv
)/
'''

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "stripe.*",
    "configparser.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=vigint",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["vigint"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]